{
  "get": {
    "tags": [
      "type",
      "mxl"
    ],
    "summary": "Applies the specified MxL method to the given type",
    "description": "Applies the specified MxL method to the given type",
    "operationId": "typeGetMxl",
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "in": "path",
        "name": "typeId",
        "description": "ID of the type in which the MxL method has to be applied",
        "required": true,
        "type": "string"
      },
      {
        "in": "query",
        "name": "method",
        "description": "The MxL method you want to apply. For a GET request, the only viable option is 'autoComplete'",
        "required": true,
        "type": "string",
        "enum": [
          "autoComplete"
        ]
      }
    ],
    "responses": {
      "200": {
        "description": "Successful operation",
        "schema": {
          "$ref": "#/definitions/mxlHints"
        }
      },
      "400": {
        "description": "Invalid ID supplied",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "Type not found",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  "post": {
    "tags": [
      "type",
      "mxl"
    ],
    "summary": "Applies the specified MxL method to the given type",
    "description": "Applies the specified MxL method to the given type",
    "operationId": "typePostMxl",
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "in": "path",
        "name": "typeId",
        "description": "ID of the type in which the MxL method has to be applied",
        "required": true,
        "type": "string"
      },
      {
        "in": "query",
        "name": "method",
        "description": "The MxL method you want to apply. For a POST request, the only viable options are 'query' and 'validate'",
        "required": true,
        "type": "string",
        "enum": [
          "query",
          "validate"
        ]
      },
      {
        "in": "body",
        "name": "mxlBody",
        "description": "The standard body for MxL requests is a JSON object which can contain the attributes 'expression', 'parameterDefinitions', and 'expressionType'",
        "required": true,
        "schema": {
          "$ref": "#/definitions/mxlBody"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Successful operation",
        "schema": {
          "$ref": "#/definitions/mxlResponse"
        }
      },
      "400": {
        "description": "Invalid ID supplied",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "Type not found",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  }
}